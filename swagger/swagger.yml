openapi: 3.0.1
info:
  title: Movinsafe
  version: 1.0.0
  description: |
    # Introduction

    movinsafe is a tracking software. Vehicle and personal tracking. Self hosting and cloud-based solution. Real time view, reports, notifications.

    With movinsafe, you can :
    * Manage devices and there location

    Through the Movinsafe API you can, for example:

    * Register new devices
    * Send new positions for spécifics devices
    * Ask traccar to send notifications

    Our API is organised around REST and JSON, and uses standard HTTP response codes, verbs and authentication.

    ## API versioning

    Our API is accessed through an generic URL.

    Any breaking changes to the API will be introduced through a new version number.

    Non-breaking changes may be introduced without changing version. These may include additional fields to JSON data structures, optional parameters to API calls, new features that can be exposed through existing API calls, or new API calls.

    Our API versioning uses 2 digits, such as *major.minor* (1.0, 1.1…). An increment in the major digit means that ground-breaking changes have been introduced (ex: rework on entire resources, major changes in the authentication system…).

    ## Security

    All endpoints require authentication.

    ## Pagination

    Many of our API resources use pagination. You can select whatever you want to receive using `page` and `size` parameters.

    ⚠️ Most of our endpoints limit the number of returned results to **100**, even if you pass a superior `size`.

    ## Errors

    We use [conventional HTTP response codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) to indicate the success or failure of an API request.

    In general:

    -   2xx codes indicate success,
    -   4xx codes indicate an error that failed given the information provided (e.g., a required parameter was omitted, the resource does not exist…),
    -   5xx codes indicate an error with Movinsafe's servers.

    | HTTP code          | Label             | Meaning                                                                                 |
    |--------------------|-------------------|-----------------------------------------------------------------------------------------|
    | 200                | OK                | Success                                                                                 |
    | 201                | Created           | A resource has been created                                                             |
    | 202                | Accepted          | The request has been accepted for processing, but the processing has not been completed |
    | 400                | Bad Request       | The request was unacceptable, often due to missing a required parameter                 |
    | 401                | Unauthorized      | No valid API key provided                                                               |
    | 402                | Request Failed    | The parameters were valid but the request failed                                        |
    | 403                | Forbidden         | The API key doesn’t have permissions to perform the request                             |
    | 404                | Not Found         | The requested resource doesn’t exist                                                    |
    | 409                | Conflict          | The request conflicts with another request                                              |
    | 429                | Too Many Requests | Too many requests hit the API too quickly                                               |
    | 500, 502, 503, 504 | Server Errors     | Something went wrong on movinsafe's side                                                |

  contact:
    url: 'https://www.movinsafe.com'
    email: support@movinsafe.com
    name: movinsafe API Team
  termsOfService: 'https://www.movinsafe.com/terms-of-service'
servers:
  - url: 'http://localhost:8080'
    description: Local Development environment
  - url: 'https://dev.movinsafe.com'
    description: Development environment, only accessible to the movinsafe team
  - url: 'https://test.movinsafe.com'
    description: Test environment, used for testing our API. Accessible on weekdays between 7:30 a.m. and 8:30 p.m. (CET)
  - url: 'https://api.movinsafe.com'
    description: Production environment (live data)
tags:
  - name: AccountResource
    description: Account queries
    x-displayName: Query/Act account
  - name: DeviceQueryResource
    description: Get information about devices.
    x-displayName: Query device
  - name: DeviceCommandResource
    description: Create/update information about devices.
    x-displayName: Act on device
  - name: WorkspaceCommandResource
    description: Create/update information about workspaces.
    x-displayName: Act on workspace
  - name: WorkspaceQueryResource
    description: Get informations about workspaces.
    x-displayName: Query workspace
x-tagGroups:
  - name: Device
    tags:
      - DeviceQueryResource
      - DeviceCommandResource
  - name: Position
    tags:
      - PositionQueryResource
      - PositionCommandResource
paths:
  /account/authenticate:
    post:
      summary: Authenticate user
      description: Authenticate user
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - AccountResource
  /service/movinsafe/workspaces:
    get:
      summary: Get worspaces
      description: Get list of workspace and sub workspace for current logged user
      operationId: getWorkspaces
      parameters:
        - name: workspace-id
          in: query
          description: Unique identifier of the workspace.
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - WorkspaceQueryResource
    put:
      summary: Create workspace
      description: Create a new workspace for current logged user
      operationId: addWorkspace
      parameters:
        - name: current-workspace-id
          in: query
          description: Unique identifier of the current workspace.
          required: false
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - WorkspaceCommandResource
  /service/movinsafe/workspaces/{workspace-id}:
    post:
      summary: Update workspace
      description: Update a workspace by it id
      operationId: updateWorkspace
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
        - name: current-workspace-id
          in: query
          description: Unique identifier of the current workspace.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - WorkspaceCommandResource
  /service/movinsafe/workspaces/{workspace-id}/users:
    get:
      summary: Get users for workspace
      description: Get list of users for current workspace
      operationId: getUsersWorkspace
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRestrictedDTO'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - WorkspaceQueryResource
    put:
      summary: Add user to a workspace
      description: Create a new user to a given workspace
      operationId: addUser
      parameters:
        - name: workspace-id
          in: path
          required: true
          description: Unique identifier of the workspace.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: Created
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - WorkspaceCommandResource
  /service/movinsafe/worspace/{workspace-id}/devices:
    get:
      summary: Get devices
      description: Get list of devices for current logged user
      operationId: getDevices
      parameters:
        - name: device-id
          in: query
          description: Unique identifier of the device.
          required: false
          schema:
            type: integer
            format: int64
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceQueryResource
    put:
      summary: Create device
      description: Create a new device for current logged user
      operationId: addDevice
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceCommandResource
  /service/movinsafe/worspace/{workspace-id}/devices/{device-id}:
    post:
      summary: Update device
      description: Update a device by it unique id
      operationId: updateDevice
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
        - name: device-id
          in: path
          description: Unique identifier of the device.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceCommandResource
  /service/movinsafe/worspace/{workspace-id}/devices/{device-id}/positions:
    put:
      summary: Add position
      description: Add position to a device by it unique id
      operationId: addPosition
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
        - name: device-id
          in: path
          description: Unique identifier of the device.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceCommandResource
  /service/movinsafe/worspace/{workspace-id}/devices/{device-id}/alert:
    put:
      summary: Add alert
      description: Add alert with position to a device by it unique id
      operationId: addAlert
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
        - name: device-id
          in: path
          description: Unique identifier of the device.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceCommandResource
  /service/movinsafe/worspace/{workspace-id}/devices/{device-id}/alert/{alert-id}:
    delete:
      summary: Cancel alert
      description: Cancel alert with it unique id
      operationId: cancelAlert
      parameters:
        - name: workspace-id
          in: path
          description: Unique identifier of the workspace.
          required: true
          schema:
            type: string
            format: uuid
        - name: device-id
          in: path
          description: Unique identifier of the device.
          required: true
          schema:
            type: string
        - name: alert-id
          in: path
          description: Unique identifier of the alert.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '403':
          $ref: '#/components/responses/AccessDenied'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/GenericError'
      tags:
        - DeviceCommandResource
components:
  schemas:
    AbstractAuditing:
      type: object
      properties:
        createdDate:
          type: string
          description: Creation date.
          format: date-time
          readOnly: true
        createdBy:
          type: string
          description: Unique identifier of the user initiating the creation.
          readOnly: true
        lastModifiedDate:
          type: string
          description: Date of the last modification.
          format: date-time
          readOnly: true
        lastModifiedBy:
          description: Unique identifier of the user initiating the last modification.
          type: string
          readOnly: true
      description: Non functional information related to all objects from the API.
    UserRestrictedDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: string
        role:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        isActivated:
          type: boolean
          default: false
        langKey:
          type: string
        passwordConfirmation:
          type: string
        statusCode:
          type: integer
        status:
          type: string
        authorities:
          type: array
          default: []
          items:
            type: string
        organisation:
          $ref: '#/components/schemas/Organisation'
    AccessToken:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: string
        refreshExpiresIn:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
        idToken:
          type: string
        notBeforePolicy:
          type: string
        sessionState:
          type: string
        scope:
          type: string
    DeviceType:
      type: string
      description: |-
        Device type:

        1. `MOBILE`: Mobile device
        2. `WEBAPP`: Webapp device
      example: REAL
      enum:
        - MOBILE
        - WEBAPP
    Workspace:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        organisation:
          $ref: '#/components/schemas/Organisation'
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        configuration:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationDTO'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
    ConfigurationDTO:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Organisation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
        address:
          type: string
        additional:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
    Device:
      type: object
      properties:
        name:
          type: string
        uniqueId:
          type: string
        protocol:
          type: string
        workspaceId:
          type: string
          format: uuid
        expirationTime:
          type: string
          format: date-time
        status:
          type: string
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
        contact:
          type: string
        model:
          type: string
        phone:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
        geofenceIds:
          type: array
          items:
            type: integer
            format: int64
        groupId:
          type: integer
          format: int64
        disabled:
          type: boolean
        category:
          type: string
        lastUpdate:
          type: string
          format: date-time
    Position:
      type: object
      properties:
        deviceUID:
          type: integer
          format: int64
        protocol:
          type: string
          format: string
        deviceTime:
          type: string
          format: timestamp
        fixTime:
          type: string
          format: date-time
        serverTime:
          type: string
          format: timestamp
        outdated:
          type: boolean
        valid:
          type: boolean
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        altitude:
          type: number
          format: double
        battery:
          type: number
          format: double
        speed:
          type: integer
        course:
          type: integer
        address:
          type: string
        accuracy:
          type: integer
        attributes:
          type: object
          additionalProperties:
            type: object
    Alert:
      type: object
      properties:
        id:
          type: string
          format: uuid
        deviceUID:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/AlertType'
        isActive:
          type: boolean
        position:
          $ref: '#/components/schemas/Position'
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
    AlertType:
      type: string
      readOnly: true
      description: |-
        Type of the alert:

        1. `medical`: Medical alert type
        2. `sos` : SOS alert type
        3. `threat`: Threat alert type
        4. `flic` : Flic alert type
        5. `fall_detected`: Fall detected alert type
        6. `verticality_loss` : Verticality loss alert type
        7. `no_network_session_expired`: No network session expired alert type
        8. `test`: Test alert type
      example: sos
      enum:
        - medical
        - sos
        - threat
        - flic
        - fall_detected
        - verticality_loss
        - no_network_session_expired
        - test
      default: sos
  responses:
    '200':
      description: OK
    GenericError:
      description: An unexpected error occurred.
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    AccessDenied:
      description: Access denied
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    NotFound:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    BadRequest:
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - oauth:
      - jhipster
      - email
      - profile
  - openId:
      - jhipster
      - email
      - profile
